{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Header/Header.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","components/Header/Header.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleFormSubmit","preventDefault","props","onSubmit","this","className","styles","label","input","type","pattern","title","required","onChange","placeholder","button","Component","Contact","id","onDelete","nameToUpperCaseFirstLetter","split","map","string","charAt","toUpperCase","slice","join","span","onClick","ContactList","contacts","Container","children","Filter","onFilter","legend","Header","Notification","message","Section","App","filter","addContact","some","contact","alert","uid","changeFilter","getFilteredContacts","cleanFilter","toLowerCase","includes","sort","a","b","localeCompare","deleteContact","idContact","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbd01fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1fl6u\",\"label\":\"ContactForm_label__XjCii\",\"input\":\"ContactForm_input__1HB_n\",\"button\":\"ContactForm_button__rhPMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__1gNZ_\",\"span\":\"Contact_span__2EQD6\",\"button\":\"Contact_button__12gn8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1V-GR\",\"legend\":\"Filter_legend__2z4JS\",\"label\":\"Filter_label__1Zhpe\",\"input\":\"Filter_input__2CzMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__17z9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__hCUp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1_1Vf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3_tWH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__38ry_\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  handleInputChange = (e) => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit} className={styles.ContactForm}>\n        <label className={styles.label}>\n          Name:\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleInputChange}\n            placeholder=\"Ivanov Ivan (ivanov ivan)\"\n          />\n        </label>\n        <label className={styles.label}>\n          Number:\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleInputChange}\n            placeholder=\"099 123 45 67 (099-123-45-67)\"\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({\n    id, name, number, onDelete,\n}) => {\n    const nameToUpperCaseFirstLetter = name\n        .split(' ')\n        .map((string) => string.charAt(0).toUpperCase() + string.slice(1))\n        .join(' ');\n    return (\n        <li className={styles.Contact}>\n            <span className={styles.span}>\n                {nameToUpperCaseFirstLetter}\n                :\n            </span>\n            <span className={styles.span}>\n                {' '}\n                {number}\n            </span>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => onDelete(id)}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDelete }) => (\n    <ul className={styles.ContactList}>\n        {contacts.map(({ id, name, number }) => (\n            <Contact\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDelete={onDelete}\n            />\n        ))}\n    </ul>\n);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onFilter }) => (\n    <fieldset className={styles.Filter}>\n        <legend className={styles.legend}>Quickly find the right contact</legend>\n        <label className={styles.label}>\n            Find contacts by name\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"filter\"\n              value={value}\n              onChange={onFilter}\n            />\n        </label>\n    </fieldset>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from 'react';\nimport styles from './Header.module.css';\n\nconst Header = () => (\n  <header className={styles.Header}>\n    <h1>react hw-03 phone book</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n    <p className={styles.Notification}>{message}</p>\n);\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={styles.Section}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { v4 as uid } from 'uuid';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Filter from './Filter';\nimport Header from './Header';\nimport Notification from './Notification';\nimport Section from './Section/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    if (contacts.some((contact) => contact.name === name)) {\n      // eslint-disable-next-line\n      alert(\n        `${name\n          .split(' ')\n          .map((string) => string.charAt(0).toUpperCase() + string.slice(1))\n          .join(\n            ' ',\n          )} is already in contacts. Change contact's name or delete old.`,\n      );\n      return;\n    }\n    const id = uid();\n    this.setState({\n      contacts: [{ name, number, id }, ...contacts],\n      filter: '',\n    });\n  };\n\n  changeFilter = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const cleanFilter = filter.toLowerCase();\n    return contacts\n      .filter((contact) => contact.name.includes(cleanFilter))\n      .sort((a, b) => a.name.localeCompare(b.name)); // сортируем контакты по алфавиту\n  };\n\n  deleteContact = (idContact) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== idContact),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <Header />\n        <Section title=\"Phone book\">\n          <ContactForm onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts[0] ? (\n            <Filter value={filter} onFilter={this.changeFilter} />\n          ) : (\n            <Notification message=\"No contacts added\" />\n          )}\n          {contacts[0] && !filteredContacts[0] && (\n            <Notification message=\"No contact found\" />\n          )}\n          {filteredContacts[0] && (\n            <ContactList\n              contacts={filteredContacts}\n              onDelete={this.deleteContact}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n/* eslint no-undef: \"error\" */\n/* eslint-env browser */\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}